<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:x="urn:schemas-microsoft-com:office:excel"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Excel.Sheet>
<meta name=Generator content="Microsoft Excel 15">
<link id=Main-File rel=Main-File href="../判断题.xls">
<link rel=File-List href=filelist.xml>
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
x\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<link rel=Stylesheet href=stylesheet.css>
<style>
<!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
@page
	{margin:1.0in .75in 1.0in .75in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;}
ruby
	{ruby-align:left;}
rt
	{color:windowtext;
	font-size:9.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:宋体;
	mso-generic-font-family:auto;
	mso-font-charset:134;
	mso-char-type:none;
	display:none;}
-->
</style>
<![if !supportTabStrip]><script language="JavaScript">
<!--
function fnUpdateTabs()
 {
  if (parent.window.g_iIEVer>=4) {
   if (parent.document.readyState=="complete"
    && parent.frames['frTabs'].document.readyState=="complete")
   parent.fnSetActiveSheet(0);
  else
   window.setTimeout("fnUpdateTabs();",150);
 }
}

if (window.name!="frSheet")
 window.location.replace("../判断题.xls");
else
 fnUpdateTabs();
//-->
</script>
<![endif]>
</head>

<body link="#0563C1" vlink="#954F72">

<form method=post action=JudgementQuestionList.aspx id=ctl00>

<table border=0 cellpadding=0 cellspacing=0 width=1242 style='border-collapse:
 collapse;table-layout:fixed;width:932pt'>
 <col width=187 style='mso-width-source:userset;mso-width-alt:6656;width:140pt'>
 <col width=69 span=2 style='mso-width-source:userset;mso-width-alt:2446;
 width:52pt'>
 <col width=256 span=3 style='mso-width-source:userset;mso-width-alt:9102;
 width:192pt'>
 <col width=40 style='mso-width-source:userset;mso-width-alt:1422;width:30pt'>
 <col width=69 style='mso-width-source:userset;mso-width-alt:2446;width:52pt'>
 <col width=40 style='mso-width-source:userset;mso-width-alt:1422;width:30pt'>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl65 width=187 style='height:14.4pt;width:140pt'><!--[if gte vml 1]><v:shapetype
   id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
   path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
   <v:stroke joinstyle="miter"/>
   <v:formulas>
    <v:f eqn="if lineDrawn pixelLineWidth 0"/>
    <v:f eqn="sum @0 1 0"/>
    <v:f eqn="sum 0 0 @1"/>
    <v:f eqn="prod @2 1 2"/>
    <v:f eqn="prod @3 21600 pixelWidth"/>
    <v:f eqn="prod @3 21600 pixelHeight"/>
    <v:f eqn="sum @0 0 1"/>
    <v:f eqn="prod @6 1 2"/>
    <v:f eqn="prod @7 21600 pixelWidth"/>
    <v:f eqn="sum @8 21600 0"/>
    <v:f eqn="prod @7 21600 pixelHeight"/>
    <v:f eqn="sum @10 21600 0"/>
   </v:formulas>
   <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
   <o:lock v:ext="edit" aspectratio="t"/>
  </v:shapetype><v:shape id="Picture_x0020_1" o:spid="_x0000_s1027" type="#_x0000_t75"
   style='position:absolute;margin-left:0;margin-top:0;width:1in;height:18pt;
   z-index:1;visibility:hidden' o:gfxdata="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
AAAA
">
   <v:imagedata src="image001.png" o:title=""/>
   <o:lock v:ext="edit" aspectratio="f"/>
   <x:ClientData ObjectType="Pict">
    <x:SizeWithCells/>
    <x:CF>Bitmap</x:CF>
    <x:AutoPict/>
   </x:ClientData>
  </v:shape><![endif]--></td>
  <td class=xl65 width=69 style='width:52pt'></td>
  <td class=xl65 width=69 style='width:52pt'></td>
  <td class=xl65 width=256 style='width:192pt'></td>
  <td class=xl65 width=256 style='width:192pt'></td>
  <td class=xl65 width=256 style='width:192pt'></td>
  <td class=xl65 width=40 style='width:30pt'></td>
  <td class=xl65 width=69 style='width:52pt'></td>
  <td class=xl65 width=40 style='width:30pt'></td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl66 width=187 style='height:14.4pt;width:140pt'>自定义题号</td>
  <td class=xl67 width=69 style='width:52pt'>题目难度</td>
  <td class=xl67 width=69 style='width:52pt'>所属阶段</td>
  <td class=xl67 width=256 style='width:192pt'>知识点</td>
  <td class=xl67 width=256 style='width:192pt'>题目名称</td>
  <td class=xl67 width=256 style='width:192pt'>题目描述</td>
  <td class=xl67 width=40 style='width:30pt'>答案</td>
  <td class=xl67 width=69 style='width:52pt'>答案描述</td>
  <td class=xl67 width=40 style='width:30pt'>备注</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>cy_001_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>1． 代码：int
  hours;System.out.println(hours);是正确的，能编译通过。</td>
  <td class=xl69 width=256 style='width:192pt'>代码：int
  hours;System.out.println(hours);是正确的，能编译通过。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>cy_002_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>用final关键字修饰的变量为静态变量。</td>
  <td class=xl69 width=256 style='width:192pt'>用final关键字修饰的变量为静态变量。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>cy_003_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>3． 用static关键字修饰的变量为常量。</td>
  <td class=xl69 width=256 style='width:192pt'>用static关键字修饰的变量为常量。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_004_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>用final关键字修饰的变量，一旦赋值后不能修改。</td>
  <td class=xl69 width=256 style='width:192pt'>用final关键字修饰的变量，一旦赋值后不能修改。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_005_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>5．
  可以给boolean型变量赋值0表示为false,赋值一个大于0的数表示true</td>
  <td class=xl69 width=256 style='width:192pt'>可以给boolean型变量赋值0表示为false,赋值一个大于0的数表示true。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>cy_006_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>6． 不可以给boolean型变量赋值null</td>
  <td class=xl69 width=256 style='width:192pt'>不可以给boolean型变量赋值null。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_007_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>java概述（何林波）</td>
  <td class=xl69 width=256 style='width:192pt'>7． 不能给byte型的变量赋值大于127的数</td>
  <td class=xl69 width=256 style='width:192pt'>不能给byte型的变量赋值大于127的数。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>cy_008_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>不同类型的数据先转化为同一类型，然后进行运算，转换从低级到高级</td>
  <td class=xl69 width=256 style='width:192pt'>整型、实型、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算，转换从低级到高级。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>cy_009_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>9． 引用类型的默认初始化值为object.</td>
  <td class=xl69 width=256 style='width:192pt'>引用类型的默认初始化值为object.</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>cy_010_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>引用类型的默认初始化值为null</td>
  <td class=xl69 width=256 style='width:192pt'>引用类型的默认初始化值为null</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>cy_011_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>java数据类型（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>Date date;中的date为引用类型</td>
  <td class=xl69 width=256 style='width:192pt'>Date date;中的date为引用类型。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_012_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>java数据类型（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>12． int[]
  intArray;中的intArray位基本数据类型</td>
  <td class=xl69 width=256 style='width:192pt'>int[] intArray;中的intArray位基本数据类型</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_014_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>13． 静态变量也是类的成员，所以也叫做成员变量。</td>
  <td class=xl69 width=256 style='width:192pt'>静态变量也是类的成员，所以也叫做成员变量。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_013_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>14．
  每个实例对象都有自己实例变量副本，而类的所有实例共享一个静态变量</td>
  <td class=xl69 width=256 style='width:192pt'>每个实例对象都有自己实例变量副本，而类的所有实例共享一个静态变量</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_015_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>15． 用private修饰的成员变量，叫实例变量。</td>
  <td class=xl69 width=256 style='width:192pt'>用private修饰的成员变量，叫实例变量。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>cy_016_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>变量默认值与作用域（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>16．
  Byte型数据和long型数据运算时，byte型数据会被自动转换为long型运算，</td>
  <td class=xl69 width=256 style='width:192pt'>Byte型数据和long型数据运算时，byte型数据会被自动转换为long型运算，并且运算结果也为long型。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=64 style='height:48.0pt'>
  <td height=64 class=xl68 width=187 style='height:48.0pt;width:140pt'>cy_017_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>java数据类型（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>17． Instanceof 和new都不是运算符</td>
  <td class=xl69 width=256 style='width:192pt'>Instanceof
  和new都不是运算符，而是方法调用。Instanceof是判断是否为实例的方法调用，而new是创建对象的方法调用。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>cy_018_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>java数据类型（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>Object的equals()方法</td>
  <td class=xl69 width=256 style='width:192pt'>Object的equals()方法用来比较两个对象是否相等。如果两个对象类型一致，且两个对象的引用相同时，返回true。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>cy_019_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>java数据类型（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>String类的equals()方法</td>
  <td class=xl69 width=256 style='width:192pt'>String类的equals()方法用来比较两个字符串的内容是否相等，若相等返回true。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>cy_020_p_p_1</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段一</td>
  <td class=xl69 width=256 style='width:192pt'>运算符与表达式，优先级与结合性（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>Instanceof右边的操作元被显示声明的类型必须</td>
  <td class=xl69 width=256 style='width:192pt'>Instanceof右边的操作元被显示声明的类型必须与左边的操作元是同种类或者有继承关系。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>hlb_02_judge_easy_001</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>声明为final的方法不能在子类中重载</td>
  <td class=xl69 width=256 style='width:192pt'>声明为final的方法不能在子类中重载。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>hlb_02_judge_common_002</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>抽象类与接口</td>
  <td class=xl69 width=256 style='width:192pt'>Java语言中的接口可以继承</td>
  <td class=xl69 width=256 style='width:192pt'>Java语言中的接口可以继承，一个接口通过关键字extends可以继承另一个接口，跟类继承一样，是单继承</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>hlb_02_judge_easy_006</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>Java中所有的类都是java.lang的子类</td>
  <td class=xl69 width=256 style='width:192pt'>Java中所有的类都是java.lang的子类。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>hlb_02_judge_common_007</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>一个子类可以重新定义从父类那里继承来的同名方法</td>
  <td class=xl69 width=256 style='width:192pt'>一个子类可以重新定义从父类那里继承来的同名方法，但是允许它们有不同类型的返回值</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_008</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>子类的成员变量能与其父类的成员变量同名</td>
  <td class=xl69 width=256 style='width:192pt'>子类的成员变量能与其父类的成员变量同名</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_009</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的多态性（何林波）</td>
  <td class=xl69 width=256 style='width:192pt'>上转型对象</td>
  <td class=xl69 width=256 style='width:192pt'>上转型对象可以使用父类的方法，不能使用子类新增的方法</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_010</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>Java中常见的类</td>
  <td class=xl69 width=256 style='width:192pt'>子类不能缩小父类方法的权限</td>
  <td class=xl69 width=256 style='width:192pt'>子类可以缩小父类方法的权限，原因是运行时绑定机制能自动识别</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_011</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的多态性（何林波）</td>
  <td class=xl69 width=256 style='width:192pt'>方法覆盖子存在子类与父类之间；同一个类中不存在覆盖，而只有重载</td>
  <td class=xl69 width=256 style='width:192pt'>方法覆盖子存在子类与父类之间；同一个类中不存在覆盖，而只有重载</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>hlb_02_judge_easy_012</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>Java语言允许某个类型的引用变量引用子类的实例，而且可以对这个引用变量进行类型转换</td>
  <td class=xl69 width=256 style='width:192pt'>Java语言允许某个类型的引用变量引用子类的实例，而且可以对这个引用变量进行类型转换</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_013</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>抽象类与接口</td>
  <td class=xl69 width=256 style='width:192pt'>如果抽象类的子类没有完全实现父类的抽象方法，则子类只能被定义为抽象类</td>
  <td class=xl69 width=256 style='width:192pt'>如果抽象类的子类没有完全实现父类的抽象方法，则子类只能被定义为抽象类</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=64 style='height:48.0pt'>
  <td height=64 class=xl68 width=187 style='height:48.0pt;width:140pt'>hlb_02_judge_common_014</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>如果子类的构造方法没有显示的调用父类的构造方法</td>
  <td class=xl69 width=256 style='width:192pt'>如果子类的构造方法没有显示的调用父类的构造方法，则会自动调用父类的默认无参构造方法，假设此时父类没有定义无参构造函数，则会编译出错</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_common_015</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>类一旦定义了带参构造方法以后，还可以继续使用虚拟机分配的无参构造方法。</td>
  <td class=xl69 width=256 style='width:192pt'>类一旦定义了带参构造方法以后，还可以继续使用虚拟机分配的无参构造方法。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr class=xl70 height=32 style='height:24.0pt'>
  <td height=32 class=xl71 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_016</td>
  <td class=xl72 width=69 style='width:52pt'>简单</td>
  <td class=xl72 width=69 style='width:52pt'>阶段二</td>
  <td class=xl72 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl72 width=256 style='width:192pt'>在同一个包中，子类能够继承到父类私有的方法，但是保护级别的无法继承</td>
  <td class=xl72 width=256 style='width:192pt'>?在同一个包中，子类能够继承到父类私有的方法，但是保护级别的无法继承</td>
  <td class=xl72 align=right width=40 style='width:30pt'>0</td>
  <td class=xl72 width=69 style='width:52pt'>　</td>
  <td class=xl72 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_common_017</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>super关键字使用</td>
  <td class=xl69 width=256 style='width:192pt'>super关键字可以使用来访问父类中的方法及即成员变量，但不是所有。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=80 style='height:60.0pt'>
  <td height=80 class=xl68 width=187 style='height:60.0pt;width:140pt'>hlb_02_judge_easy_018</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类和对象（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>类的成员变量分两类</td>
  <td class=xl69 width=256 style='width:192pt'>–类的成员变量分两类,用static修饰的成员变量，称为类变量或静态变量，没有static修饰的成员变量，叫实例变量。实例变量跟静态变量在内存中存储的位置一样，都位于堆区。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=64 style='height:48.0pt'>
  <td height=64 class=xl68 width=187 style='height:48.0pt;width:140pt'>hlb_02_judge_common_019</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类和对象（昌燕）</td>
  <td class=xl69 width=256 style='width:192pt'>类方法不属于类的某个对象，可以被由该类</td>
  <td class=xl69 width=256 style='width:192pt'>类方法不属于类的某个对象，可以被由该类创建的所有对象使用，也可以被其它类引用。但是在使用类方法前需要对类进行实例化操作。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_020</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>Java中常见的类</td>
  <td class=xl69 width=256 style='width:192pt'>this关键字“.”号后的成员指的是正在调用这个方</td>
  <td class=xl69 width=256 style='width:192pt'>this关键字“.”号后的成员指的是正在调用这个方法的某个对象的成员</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_003</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>抽象类与接口</td>
  <td class=xl69 width=256 style='width:192pt'>一个JAVA的类可以有多个接口</td>
  <td class=xl69 width=256 style='width:192pt'>一个JAVA的类可以实现多个接口，它们通过关键字
  implements 来实现。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_004</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>抽象类与接口</td>
  <td class=xl69 width=256 style='width:192pt'>抽象方法只能存在于抽象类中，接口中所有方法均为抽象方法</td>
  <td class=xl69 width=256 style='width:192pt'>抽象方法只能存在于抽象类中，抽象类中不能有实现的方法。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>hlb_02_judge_easy_005</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段二</td>
  <td class=xl69 width=256 style='width:192pt'>类的继承（索望）</td>
  <td class=xl69 width=256 style='width:192pt'>Java中一个子类可以有多个直接父类</td>
  <td class=xl69 width=256 style='width:192pt'>Java中一个子类可以有多个直接父类，也可以为一个（父）类定义多个子类。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_009</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>运行时异常是在运行时系统检测并处理的。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>xx_3_judge_common_011</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>捕获异常时try语句后面通常跟有一个或多个catch（）方法用来处理try块内生成的异常事件。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_012</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>使用finally语句的程序代码为该程序提供一个统一的的出口。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>xx_3_judge_common_013</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>抛出异常的方法说明中要加关键字throws，并在该方法中还应添加throw语句。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_014</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>创建异常类时要给出该异常类的父类。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_015</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>.如果异常类没有被捕获将会产生不正常的终止。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_016</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>程序中抛出异常时(throw)，只能抛出自己定义的异常对象。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_017</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>一个异常处理中finally语句块只能有一个或者可以没有。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_018</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>异常类对象代表当前出现的一个具体异常。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_common_019</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>java语言中的所有异常类都是java.lang.Throwable的子类。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_common_020</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>如果异常发生时，没有捕获异常的代码，程序会正常执行</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_010</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>使用try-catch-finally语句只能捕获一个异常。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr class=xl70 height=19 style='height:14.4pt'>
  <td height=19 class=xl71 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_021</td>
  <td class=xl72 width=69 style='width:52pt'>简单</td>
  <td class=xl72 width=69 style='width:52pt'>阶段三</td>
  <td class=xl72 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl72 width=256 style='width:192pt'>判断题</td>
  <td class=xl72 width=256 style='width:192pt'>Map接口是自Collection接口继承而来。</td>
  <td class=xl72 width=40 style='width:30pt'><span
  style='mso-spacerun:yes'> </span></td>
  <td class=xl72 width=69 style='width:52pt'>　</td>
  <td class=xl72 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_022</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>集合Set是通过键-值对的方式来存储对象的。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>xx_3_judge_easy_023</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>Integer i
  =(Integer.valueOf(&quot;926&quot;)).intValue();</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>xx_3_judge_easy_024</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>String s
  =(Double.valueOf(&quot;3.1415926&quot;)).toString();</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_025</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>Integer I
  =Integer.parseInt(&quot;926&quot;);</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_026</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>Arrays类主要对数组进行操作。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_027</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>在集合中元素类型必须是相同的</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_028</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>集合中可以包含相同的对象。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr class=xl78 height=19 style='height:14.4pt'>
  <td height=19 class=xl76 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_029</td>
  <td class=xl77 width=69 style='width:52pt'>简单</td>
  <td class=xl77 width=69 style='width:52pt'>阶段三</td>
  <td class=xl77 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl77 width=256 style='width:192pt'>判断题</td>
  <td class=xl77 width=256 style='width:192pt'>枚举接口定义了具有删除功能的方法。</td>
  <td class=xl77 align=right width=40 style='width:30pt'>0</td>
  <td class=xl77 width=69 style='width:52pt'>　</td>
  <td class=xl77 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_common_030</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>数组中的数据既可以是基本数据类型，又可以是对象。而集合类中只能保存对象。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_031</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>集合类中的数据数量不确定，而数组中数据的数量确定</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr class=xl78 height=48 style='height:36.0pt'>
  <td height=48 class=xl76 width=187 style='height:36.0pt;width:140pt'>xx_3_judge_common_032</td>
  <td class=xl77 width=69 style='width:52pt'>普通</td>
  <td class=xl77 width=69 style='width:52pt'>阶段三</td>
  <td class=xl77 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl77 width=256 style='width:192pt'>判断题</td>
  <td class=xl77 width=256 style='width:192pt'>Arrays.ArrayList类：可以将一个数组或者指定个数的对象转换成一个List集合。除了能遍历还能进行插入和删除操作。</td>
  <td class=xl77 align=right width=40 style='width:30pt'>0</td>
  <td class=xl77 width=69 style='width:52pt'>　</td>
  <td class=xl77 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_034</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>List按照添加元素的先后顺序设置索引。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_common_035</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java集合框架（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>Set集合判断两个元素是否相等是根据equal方法，也可以使用“==”</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr class=xl70 height=48 style='height:36.0pt'>
  <td height=48 class=xl71 width=187 style='height:36.0pt;width:140pt'>wcw_003_04p</td>
  <td class=xl72 width=69 style='width:52pt'>普通</td>
  <td class=xl72 width=69 style='width:52pt'>阶段三</td>
  <td class=xl72 width=256 style='width:192pt'>Java多线程（吴春旺）</td>
  <td class=xl72 width=256 style='width:192pt'>当一个Java线程对象创建后，其他线程就调用它的start()方法，该线程就进入了运行状态。</td>
  <td class=xl72 width=256 style='width:192pt'>当一个Java线程对象创建后，其他线程就调用它的start()方法，该线程就进入了运行状态。</td>
  <td class=xl72 align=right width=40 style='width:30pt'>0</td>
  <td class=xl72 width=69 style='width:52pt'>　</td>
  <td class=xl72 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>wcw_003_01p</td>
  <td class=xl69 width=69 style='width:52pt'>普通</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java多线程（吴春旺）</td>
  <td class=xl69 width=256 style='width:192pt'>当死锁发生时，Java虚拟机监测并试图避免这种情况。（ ）</td>
  <td class=xl69 width=256 style='width:192pt'>当死锁发生时，Java虚拟机监测并试图避免这种情况。（&nbsp;&nbsp;&nbsp;）</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>wcw_003_03j</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java多线程（吴春旺）</td>
  <td class=xl69 width=256 style='width:192pt'>Java虚拟机采用分时调度模型来进行线程的调度。（ ）</td>
  <td class=xl69 width=256 style='width:192pt'>Java虚拟机采用分时调度模型来进行线程的调度。（&nbsp;&nbsp;&nbsp;&nbsp;）</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr class=xl73 height=19 style='height:14.4pt'>
  <td height=19 class=xl74 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_001</td>
  <td class=xl75 width=69 style='width:52pt'>简单</td>
  <td class=xl75 width=69 style='width:52pt'>阶段三</td>
  <td class=xl75 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl75 width=256 style='width:192pt'>判断题</td>
  <td class=xl75 width=256 style='width:192pt'>异常是一种特殊的运行错误的对象。</td>
  <td class=xl75 align=right width=40 style='width:30pt'>1</td>
  <td class=xl75 width=69 style='width:52pt'>　</td>
  <td class=xl75 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_002</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>异常处理可以使整个系统更加安全和稳定。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_003</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>异常处理是在编译时进行的。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_004</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>Java语言中异常类都是java.lang.Throwable的子类。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=48 style='height:36.0pt'>
  <td height=48 class=xl68 width=187 style='height:36.0pt;width:140pt'>xx_3_judge_easy_005</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>Throwable类有两个子类：Error类和Exception类。前者由系统保留，后者供应用程序使用。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>1</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=19 style='height:14.4pt'>
  <td height=19 class=xl68 width=187 style='height:14.4pt;width:140pt'>xx_3_judge_easy_006</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>异常通常是指Error类和Exception类。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_007</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>Exception类只有一个子类为RuntimeException。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　</td>
 </tr>
 <tr height=32 style='height:24.0pt'>
  <td height=32 class=xl68 width=187 style='height:24.0pt;width:140pt'>xx_3_judge_easy_008</td>
  <td class=xl69 width=69 style='width:52pt'>简单</td>
  <td class=xl69 width=69 style='width:52pt'>阶段三</td>
  <td class=xl69 width=256 style='width:192pt'>Java的异常（熊熙）</td>
  <td class=xl69 width=256 style='width:192pt'>判断题</td>
  <td class=xl69 width=256 style='width:192pt'>在异常处理中，出现异常和抛出异常是一回事。</td>
  <td class=xl69 align=right width=40 style='width:30pt'>0</td>
  <td class=xl69 width=69 style='width:52pt'>　</td>
  <td class=xl69 width=40 style='width:30pt'>　
  </form>
  </td>
 </tr>
 <![if supportMisalignedColumns]>
 <tr height=0 style='display:none'>
  <td width=187 style='width:140pt'></td>
  <td width=69 style='width:52pt'></td>
  <td width=69 style='width:52pt'></td>
  <td width=256 style='width:192pt'></td>
  <td width=256 style='width:192pt'></td>
  <td width=256 style='width:192pt'></td>
  <td width=40 style='width:30pt'></td>
  <td width=69 style='width:52pt'></td>
  <td width=40 style='width:30pt'></td>
 </tr>
 <![endif]>
</table>

</body>

</html>
